{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport users from '../assets/payouts.json';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit {\n\n  displayedColumns: string[] = [\n    'id',\n    'display_name',\n    'ad_share_gross',\n    'sub_share_gross',\n    'bits_share_gross',\n    'bits_extension_share_gross',\n    'prime_sub_share_gross',\n    'bit_share_ad_gross',\n    'experimental_rev_gross',\n    'sum',\n    'avg'\n  ];\n  dataSource = new MatTableDataSource(users);\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor() {\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n}\n\nexport interface User {\n  id: number;\n  display_name: string;\n  ad_share_gross: number;\n  sub_share_gross: number;\n  bits_share_gross: number;\n  bits_developer_share_gross: number;\n  bits_extension_share_gross: number;\n  prime_sub_share_gross: number;\n  bit_share_ad_gross: number;\n  fuel_rev_gross: number;\n  bb_rev_gross: number;\n  experimental_rev_gross: number;\n  sum: number;\n  avg: number;\n}\n","<div class=\"c\">\n  <h1>Magyar Tvic$i Ricc$</h1>\n  <span>Az oszlopok nevére kattintva tudod rendezni a táblázatot. </span>\n  <span class=\"i\">A rendezés a nagy adatmennyiség miatt lassú lehet!</span>\n  <span class=\"d\">Elérhetőség: <span>tvicsiriccs@protonmail.com</span></span>\n</div>\n\n<table mat-table [dataSource]=\"dataSource\" matSort matSortActive=\"sum\" matSortDirection=\"desc\" matSortDisableClear>\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef> # </th>\n    <td mat-cell *matCellDef=\"let element; let i = index\"> {{i + 1}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"display_name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Név </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.display_name}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"ad_share_gross\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Reklám </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.ad_share_gross | currency }} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"sub_share_gross\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Sub </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.sub_share_gross | currency }} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"bits_share_gross\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Cheer </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.bits_share_gross | currency }} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"bits_extension_share_gross\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Cheer kiegészítőkből </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.bits_extension_share_gross | currency }} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"prime_sub_share_gross\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Prime sub </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.prime_sub_share_gross | currency }} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"bit_share_ad_gross\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Cheer reklámokból </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.bit_share_ad_gross | currency }} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"experimental_rev_gross\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Egyéb kísérlet </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.experimental_rev_gross | currency }} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"sum\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Összesen </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.sum | currency }} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"avg\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Havi átlag </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.avg | currency }} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatSortModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}