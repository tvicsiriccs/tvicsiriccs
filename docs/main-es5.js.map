{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","displayedColumns","dataSource","sort","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport users from '../assets/payouts.json';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements AfterViewInit {\r\n\r\n  displayedColumns: string[] = [\r\n    'id',\r\n    'display_name',\r\n    'ad_share_gross',\r\n    'sub_share_gross',\r\n    'bits_share_gross',\r\n    'bits_extension_share_gross',\r\n    'prime_sub_share_gross',\r\n    'bit_share_ad_gross',\r\n    'experimental_rev_gross',\r\n    'sum',\r\n    'avg'\r\n  ];\r\n  dataSource = new MatTableDataSource(users);\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n\r\nexport interface User {\r\n  id: number;\r\n  display_name: string;\r\n  ad_share_gross: number;\r\n  sub_share_gross: number;\r\n  bits_share_gross: number;\r\n  bits_developer_share_gross: number;\r\n  bits_extension_share_gross: number;\r\n  prime_sub_share_gross: number;\r\n  bit_share_ad_gross: number;\r\n  fuel_rev_gross: number;\r\n  bb_rev_gross: number;\r\n  experimental_rev_gross: number;\r\n  sum: number;\r\n  avg: number;\r\n}\r\n","<div class=\"c\">\r\n  <h1>Magyar Tvic$i Ricc$</h1>\r\n  <p>(2019. augusztus - 2021. szeptember)</p>\r\n  <span>Az oszlopok nevére kattintva tudod rendezni a táblázatot. <span class=\"i\">A rendezés a nagy adatmennyiség miatt\r\n      lassú lehet!</span></span>\r\n  <p class=\"x\">Minimális eltérés lehet más oldalak adataihoz képest, mivel ők a 2019. júliusi bevétel egy részét is\r\n    hozzászámolták.</p>\r\n  <span class=\"d\">Elérhetőség: <span>tvicsiriccs@protonmail.com</span></span>\r\n</div>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" matSort matSortActive=\"sum\" matSortDirection=\"desc\" matSortDisableClear>\r\n  <ng-container matColumnDef=\"id\">\r\n    <th mat-header-cell *matHeaderCellDef> # </th>\r\n    <td mat-cell *matCellDef=\"let element; let i = index\"> {{i + 1}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"display_name\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Név </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.display_name}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"ad_share_gross\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Reklám </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.ad_share_gross | currency }} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"sub_share_gross\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Sub </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.sub_share_gross | currency }} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"bits_share_gross\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Cheer </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.bits_share_gross | currency }} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"bits_extension_share_gross\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Cheer kiegészítőkből </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.bits_extension_share_gross | currency }} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"prime_sub_share_gross\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Prime sub </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.prime_sub_share_gross | currency }} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"bit_share_ad_gross\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Cheer reklámokból </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.bit_share_ad_gross | currency }} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"experimental_rev_gross\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Egyéb kísérlet </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.experimental_rev_gross | currency }} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"sum\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Összesen </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.sum | currency }} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"avg\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Havi átlag </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.avg | currency }} </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatTableModule,\r\n    MatSortModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}